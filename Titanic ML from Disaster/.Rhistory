raw_data <- read.csv(".../Data/test.csv", header = F)
raw_data <- read.csv("...\Data\test.csv", header = F)
raw_data <- read.csv("../Data/test.csv", header = F)
getwd()
raw_data <- read.csv("./Data/test.csv", header = F)
raw_data <- read.csv("./Data/test.csv", header = F)
summary(raw_data)
raw_data <- read.csv("./Data/test.csv", header = F)
hist(raw_data$V4, probability = T)
raw_data <- read.csv("./Data/test.csv", header = F)
summary(raw_data)
--hist(raw_data$V4, probability = T)
raw_data <- read.csv("./Data/test.csv", header = F)
head(raw_data)
raw_data <- read.csv("./Data/test.csv", header = T)
head(raw_data)
hist(raw_data$Age)
hist(raw_data$Age)
hist(raw_date$sex)
hist(raw_data$Age)
barplot(raw_date$sex)
hist(raw_data$Age)
barplot(raw_data$sex)
hist(raw_data$Age)
counts <- table(raw_data$Sex)
barplot(counts)
install.packages(ggplot)
install.packages(ggplot2)
install.packages("ggplot2")
nameSplit <- strsplit(raw_data$Name, " ")
nameSplit <- strsplit(as.character(raw_data$Name), " ")
head(nameSplit)
nameSplit <- strsplit(as.character(raw_data$Name), " ")
nameSplit
nameSplit <- strsplit(as.character(raw_data$Name), " ")
head(nameSplit)
parentCount <- table(raw_data$Parch)
barplot(parentCount)
classCount <- table(raw_data$Pclass)
barplot(classCount)
view(raw_data)
View(raw_data)
pairs(raw_data[raw_data$Sex]:raw_data$Age)
pairs(raw_data[3:4])
pairs(raw_data[1,8])
pairs(raw_data[1:8])
pairs(raw_data[[1]], raw_data[[8]])
pairs(raw_data[1])
pairs(raw_data["Pclass"],raw_data["Sex"])
pairs(raw_data["Pclass", "Sex"])
subset <- c(raw_data$Pclass, raw_data$Sex)
subset <- c(raw_data$Pclass, raw_data$Sex)
head(subset)
data()
names(airquality)
# VARIABLES: [1] "Ozone"   "Solar.R" "Wind"    "Temp"    "Month"   "Day"
plot(Ozone~Solar.R, data=airquality)
# Calculate the mean of Ozone concentration
mean(airquality$Ozone)
airquality$Ozone
# Get rid of NA values
mean(airquality$Ozone, na.rm = T)
# Plot horizontal line at the mane value of mean.Ozone
abline(h=mean.Ozone)
# Plot horizontal line at the mane value of mean.Ozone
abline(h = mean.Ozone)
ls()
# Plot horizontal line at the mane value of mean.Ozone
abline(h = mean.Ozone)
# Get rid of NA values and produce mean
mean.Ozone = mean(airquality$Ozone, na.rm = T)
# Plot horizontal line at the mane value of mean.Ozone
abline(h = mean.Ozone)
# Get rid of NA values and produce mean
mean.Ozone <- mean(airquality$Ozone, na.rm = T)
ls()
model1
model1
# Use lm to create model. Response Variable = What are we interested in (Ozone concentration) / Explanatory Variable =
model1 = lm(Ozone~Solar.R, data = airquality)
model1
abline(model1, col = "red")
# Plot model1
plot(model1)
summary(model1)
x <- seq(10)
x
x <- seq(1000)
x
y <- (x-1)/sqrt(x)
y
plot(x, Y)
plot(x, y)
deltaY <- (11/16)*(x-4)+0.5
plot(x, deltaY)
plot(x, y)
lines(x, deltaY, col="red")
x <- seq(0, 20, 0.1)
plot(x, y)
y <- (x-1)/sqrt(x)
plot(x, y)
deltaY <- (11/16)*(x-4)+0.5
lines(x, deltaY, col="red")
deltaY <- (11/16)*(x-4)+0.5
lines(x, deltaY, col="red")
x <- seq(0, 20, 1)
y <- (x-1)/sqrt(x)
deltaY <- (11/16)*(x-4)+0.5
plot(x, y)
deltaY <- (11/16)*(x-4)+0.5
lines(x, deltaY, col="red")
deltaY <- (19/16)*(x-4)
lines(x, deltaY, col="red")
train_data <- read.csv("./Data/train.csv", header = T)
names(train_data)
head(train_data)
plot(Survived~Age, data=train_data)
plot(Survived~class, data=train_data)
plot(Survived~Pclass, data=train_data)
plot(Age~Pclass, data=train_data)
plot(Age~Survived, data=train_data)
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(testData)
view(testData)
View(testData)
AdultFlag <- function(Age) {
if (age > 0 & age < 18)
0
}
AdultFlag <- function(Age) {
if (age > 0 & age < 18)
0
}
testData <- cbind(testData, AdultFlag)
AdultFlag <- function(Age) {
if (age > 0 & age < 18)
0
}
str(AdultFlag)
#testData <- cbind(testData, AdultFlag)
#View(testDate)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[testData$Age = 'NA'] <- -1
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[testData$Age = "NA"] <- -1
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[testData$Age == "NA"] <- -1
View(testDate)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[testData$Age == "NA"] <- -1
View(testData)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[testData$Age == NA] <- -1
View(testData)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
View(testData)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
plot(PassengerId~AdultFlag, data=testData)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
barplot(AdultFlag, data=testData)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
barplot(AdultFlag)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
counts <- table(AdultFlag)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
counts <- table(testData$AdultFlag)
barplot(counts)
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
counts <- table(testData$AdultFlag)
barplot(counts, col = "darkgreen")
testData$AdultFlag[testData$Age <= 18 & testData$Age > 0] <- 0
testData$AdultFlag[testData$Age > 18] <- 1
testData$AdultFlag[is.na(testData$Age)] <- -1
counts <- table(testData$AdultFlag)
barplot(counts, main = "Passengers classified by Age", names.arg = c('Missing Value', 'Children', 'Adults'), col = "darkgreen")
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(trainData)
trainData$AdultFlag[trainData$Age <= 18 & trainData$Age > 0] <- 0
trainData$AdultFlag[trainData$Age > 18] <- 1
trainData$AdultFlag[is.na(trainData$Age)] <- -1
counts <- table(trainData$AdultFlag)
barplot(counts, main = "Passengers classified by Age", names.arg = c('Missing Value', 'Children', 'Adults'), col = "darkgreen")
# Libraries
library("ggplot2")
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(trainData)
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
# Libraries
library("ggplot2")
library("ggthemes")
install.packages("ggthemes")
# Libraries
library("ggplot2")
library("ggthemes")
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(trainData)
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
testData$FamilyClass[trainData$familySize = 1] <- 'Single'
testData$FamilyClass[trainData$familySize == 1] <- 'Single'
testData$FamilyClass[trainData$familySize == 1 & na.omit(trainData$familySize) ] <- 'Single'
testData$FamilyClass[na.omit(trainData$familySize) == 1] <- 'Single'
testData$FamilyClass[trainData$familySize == 1] <- 'Single'
testData$FamilyClass[trainData$familySize == 1] <- 'Single'
# Libraries
library("ggplot2")
library("ggthemes")
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(trainData)
trainData$AdultFlag[trainData$Age <= 18 & trainData$Age > 0] <- 0
trainData$AdultFlag[trainData$Age > 18] <- 1
trainData$AdultFlag[is.na(trainData$Age)] <- -1
counts <- table(trainData$AdultFlag)
barplot(counts, main = "Passengers classified by Age", names.arg = c('Missing Value', 'Children', 'Adults'), col = "darkgreen")
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
testData$FamilyClass[trainData$familySize == 1] <- 'Single'
View(testData)
#testData$FamilyClass[trainData$familySize == 1] <- 'Single'
#testData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
#testData$FamilyClass[trainData$familySize >= 4] <- 'Large'
View(trainData)
#trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
#trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
#trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
# Libraries
library("ggplot2")
library("ggthemes")
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(trainData)
trainData$AdultFlag[trainData$Age <= 18 & trainData$Age > 0] <- 0
trainData$AdultFlag[trainData$Age > 18] <- 1
trainData$AdultFlag[is.na(trainData$Age)] <- -1
counts <- table(trainData$AdultFlag)
barplot(counts, main = "Passengers classified by Age", names.arg = c('Missing Value', 'Children', 'Adults'), col = "darkgreen")
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
View(trainData)
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
ggplot(trainData, aes(x = FamilyClass, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
ggplot(trainData, aes(x = FamilyClass, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + labs(x = 'Family Size') + theme_few()
# Libraries
library("ggplot2")
library("ggthemes")
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(trainData)
trainData$AdultFlag[trainData$Age <= 18 & trainData$Age > 0] <- 0
trainData$AdultFlag[trainData$Age > 18] <- 1
trainData$AdultFlag[is.na(trainData$Age)] <- -1
counts <- table(trainData$AdultFlag)
barplot(counts, main = "Passengers classified by Age", names.arg = c('Missing Value', 'Children', 'Adults'), col = "darkgreen")
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Observations', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
ggplot(trainData, aes(x = FamilyClass, fill = factor(Survived))) + geom_bar(stat = 'Observations', position = 'stack') + labs(x = 'Family Size') + theme_few()
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
ggplot(trainData, aes(x = FamilyClass, fill = factor(Survived))) + geom_bar(stat = 'Observations') + labs(x = 'Family Size') + theme_few()
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
ggplot(trainData, aes(x = FamilyClass, fill = factor(Survived))) + geom_bar(stat = 'Observations', position = 'dodge') + labs(x = 'Family Size') + theme_few()
# Libraries
library("ggplot2")
library("ggthemes")
testData <- read.csv("./Data/test.csv", header = T)
trainData <- read.csv("./Data/train.csv", header = T)
summary(trainData)
trainData$AdultFlag[trainData$Age <= 18 & trainData$Age > 0] <- 0
trainData$AdultFlag[trainData$Age > 18] <- 1
trainData$AdultFlag[is.na(trainData$Age)] <- -1
counts <- table(trainData$AdultFlag)
barplot(counts, main = "Passengers classified by Age", names.arg = c('Missing Value', 'Children', 'Adults'), col = "darkgreen")
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Observations', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
View(testData)
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Observations', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + ylab('Observations') + theme_few()
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
ggplot(trainData, aes(x = FamilyClass, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'stack') + labs(x = 'Family Size') + ylab('Observations') + theme_few()
trainData$FamilyClass[trainData$familySize == 1] <- 'Single'
trainData$FamilyClass[trainData$familySize > 1 & trainData$familySize < 4] <- 'Small'
trainData$FamilyClass[trainData$familySize >= 4] <- 'Large'
ggplot(trainData, aes(x = FamilyClass, fill = factor(Survived))) + geom_bar(stat = 'Count', position = 'dodge') + labs(x = 'Family Size') + ylab('Observations') + theme_few()
trainData$familySize <- trainData$SibSp + trainData$Parch + 1
ggplot(trainData, aes(x = familySize, fill = factor(Survived)), col("black")) + geom_bar(stat = 'Count', position = 'dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + ylab('Observations') + theme_few()
